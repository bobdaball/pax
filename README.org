* Pax
The end of fake news.

* Tech Stack
+ Node + Express
+ PostgreSQL
+ React + Redux
+ D3

* Dev Stack
+ AWS EC2
+ Travis CI

** Continuous Integration
See: https://github.com/pax-atlantica/pax-ci

* How to Start This App
Upon cloning the forked repo, npm install on root directory in command line.
Once installed, execute 'npm run start-dev' on the same directory.
Open the app on a web browser by accessing 127.0.0.1:3000.
Make sure to add remote upstream if you plan to contribute/ update app.

* How to contribute

First rebase your local repo through 'git --rebase upstream master.'
Commit all changed you've made, then 'git push origin master'.
Now you can make a pull request through your local forked copy of the project!
The request will be checked by one of the members before it gets merged.

* Server Endpoints
** REQUEST
|--------+---------+--------------+-----------------------------------------|
| METHOD | URL     | REQUEST.BODY | EXAMPLE                                 |
|--------+---------+--------------+-----------------------------------------|
| GET    | /       |              |                                         |
| POST   | /signup | JSON         | {username: 'pax', password:'atlantica'} |
| POST   | /login  | JSON         | {username: 'pax, password:'atlantica'}  |
|--------+---------+--------------+-----------------------------------------|

** RESPONSE
|--------+---------+--------------+-----------------+-----------+--------------|
| METHOD | URL     | SUCCESS TYPE | SUCCESS CONTENT | FAIL TYPE | FAIL CONTENT |
|--------+---------+--------------+-----------------+-----------+--------------|
| GET    | /       | index.html   |                 |           |              |
| POST   | /signup | string       | username        | null      | null         |
| POST   | /login  | string       | username        | null      | null         |
|--------+---------+--------------+-----------------+-----------+--------------|

* Schema
** USER SCHEMA
|------+----------+--------+----------|
| USER | USERNAME | EMAIL  | PASSWORD |
|------+----------+--------+----------|
| id   | String   | String | String   |
|------+----------+--------+----------|

** SEARCH / ARTICLE SCHEMA
|--------+-------------+---------+---------+--------+----------+----------------|
| SEARCH | USERS       | TEXT    | ISLINK  | RESULT | POLARITY | POLARITY SCORE |
|--------+-------------+---------+---------+--------+----------+----------------|
| id     | Foreign Key | VarChar | Boolean | Number | String   | Number         |
|--------+-------------+---------+---------+--------+----------+----------------|

-->

|--------+---------+--------+--------+---------+------------+-----------+-----------|
| ANGER  | DISGUST | FEAR   | JOY    | SADNESS | ANALYTICAL | CONFIDENT | TENTATIVE |
|--------+---------+--------+--------+---------+------------+-----------+-----------|
| Number | Number  | Number | Number | Number  | Number     | Number    | Number    |
|--------+---------+--------+--------+---------+------------+-----------+-----------|

-->

|----------+-------------------+--------------+---------------+-----------------|
| OPENNESS | CONSCIENTIOUSNESS | EXTRAVERSION | AGREEABLENESS | EMOTIONAL RANGE |
|----------+-------------------+--------------+---------------+-----------------|
| Number   | Number            | Number       | Number        | Number          |
|----------+-------------------+--------------+---------------+-----------------|

** UPVOTES / DOWNVOTES (JOIN TABLE)
|------+---------+---------+----------+-------------+-------------|
| VOTE | VOTED   | UPVOTE  | DOWNVOTE | USER        | ARTICLE     |
|------+---------+---------+----------+-------------+-------------|
| id   | Boolean | Boolean | Boolean  | Foreign Key | Foreign Key |
|------+---------+---------+----------+-------------+-------------|

* Client States Stored in client/src/reducers

** in userReducer
initialState = {
  login: false,
  upvoteAverages: {  // keeps track of the Average scores of previously upvoted articles, all 0 by default.
    anger: 0,
    ...
    emotional_range: 0,
  },
  loginView: false, // All the ...View states decides which Views are visible at a given time.
  dashboardView: false,
  inputView: true,
  resultView: false,
  waitingView: false,
  aboutView: false,
};


** in analyzerReducer

const initialState = {
  analyzeUrl: true, // decides if Url input is visible
  analyzeText: false, // text input visibility
  error: null,
  height: 400,
  id: null,
  score: null,
  sentiment: null,
  success: false, // Triggers transition from waiting to results page
  summary: null,
  title: null,
  tone: null,
  waiting: false, //decides waiting screen visibility
  width: 800,
  init : true // decides if id ... tone values are default or not
};

**in voteReducer

const initialState = {
  downVote: false, // whether the user upvoted article or not. downVote and upVote cannot both be true.
  downVoteCount: 0, // Aggregate downvotes made by different users on given article
  upVote: false,
  upVoteCount: 0,
};